# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        
      - name: terraform-docs-gh-actions
        # You may pin to the exact commit or the version.
        # uses: terraform-docs/gh-actions@3c0f47976721ee865f026414662f497f68925f89
        uses: terraform-docs/gh-actions@v0.10.0
        with:
          # Name of terraform-docs config file. To enable, provide the file name (e.g. `.terraform-docs.yml`)
          config-file: # optional, default is disabled
          # Comma separated list of directories to generate docs for (ignored if `atlantis-file` or `find-dir` is set)
          working-dir: ../ # optional, default is .
          # Name of Atlantis file to extract list of directories by parsing it. To enable, provide the file name (e.g. `atlantis.yaml`)
          atlantis-file: # optional, default is disabled
          # Name of root directory to extract list of directories by running `find ./find_dir -name *.tf` (ignored if `atlantis-file` is set)
          find-dir: # optional, default is disabled
          # terraform-docs format to generate content (see [all formats](https://github.com/terraform-docs/terraform-docs/blob/master/docs/FORMATS_GUIDE.md)) (ignored if `config-file` is set)
          output-format: # optional, default is markdown table
          # Method should be one of `replace`, `inject`, or `print`
          output-method: # optional, default is inject
          # File in module directory where the docs should be placed
          output-file: # optional, default is USAGE.md
          # When provided will be used as the template if/when the `output-file` does not exist
          template: # optional, default is # Usage


          # Additional arguments to pass to the command (see [full documentation](https://github.com/terraform-docs/terraform-docs/tree/master/docs))
          args: # optional, default is 
          # Indention level of Markdown sections [1, 2, 3, 4, 5]
          indention: # optional, default is 2
          # If true it will commit and push the changes
          git-push: # optional, default is false
          # If empty the name of the GitHub Actions bot will be used (i.e. `github-actions[bot]`)
          git-push-user-name: # optional, default is 
          # If empty the no-reply email of the GitHub Actions bot will be used (i.e. `github-actions[bot]@users.noreply.github.com`)
          git-push-user-email: # optional, default is 
          # Commit message
          git-commit-message: # optional, default is terraform-docs: automated action
          # If true it will sign-off commit
          git-push-sign-off: # optional, default is false
          # Fail the job if there is any diff found between the generated output and existing file (ignored if `git-push` is set)
          fail-on-diff: # optional, default is false
